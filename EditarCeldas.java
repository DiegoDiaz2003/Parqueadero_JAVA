/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectoparqueadero;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author SIMON
 */
public class EditarCeldas extends javax.swing.JPanel {

    private int idEditado;
    /**
     * Creates new form IngresarCeldas
     */
    public EditarCeldas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUbicacion = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        cbParqueadero = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNumCelda = new java.awt.TextField();
        jLabel2 = new javax.swing.JLabel();
        btEditarCelda = new java.awt.Button();
        btEliminar = new java.awt.Button();
        btCancelar = new java.awt.Button();

        setBackground(new java.awt.Color(246, 246, 246));

        txtUbicacion.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUbicacionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 116, 155));
        jLabel1.setText("Parqueadero:");

        cbParqueadero.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cbParqueadero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbParqueadero.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(41, 116, 155));
        jLabel4.setText("Ubicacion: ");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 116, 155));
        jLabel5.setText("Número de la celda:");

        txtNumCelda.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtNumCelda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumCeldaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(18, 24, 80));
        jLabel2.setText("Modulo de Edición de Celdas");

        btEditarCelda.setBackground(new java.awt.Color(51, 102, 255));
        btEditarCelda.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btEditarCelda.setForeground(new java.awt.Color(255, 255, 255));
        btEditarCelda.setLabel("Editar celda");
        btEditarCelda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarCeldaActionPerformed(evt);
            }
        });

        btEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btEliminar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btEliminar.setLabel("Eliminar celda");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        btCancelar.setActionCommand("Inactivar");
        btCancelar.setBackground(new java.awt.Color(255, 255, 51));
        btCancelar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(0, 0, 0));
        btCancelar.setLabel("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNumCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbParqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(164, 164, 164))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btEditarCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel4)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel5)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbParqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtNumCelda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btEditarCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUbicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUbicacionActionPerformed

    private void txtNumCeldaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumCeldaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumCeldaActionPerformed

    private void btEditarCeldaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarCeldaActionPerformed
        try {
            
            String numeroCelda = txtNumCelda.getText();
            String ubicacionCelda = txtUbicacion.getText();
            
            if ( numeroCelda.equals("") || ubicacionCelda.equals("")) {

                JOptionPane.showMessageDialog(null, "Los campos son vacíos", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");

                // SIN TERMINAR C
                String sql = "UPDATE [dbo].[Celdas] SET Numero_celda=?, Ubicacion_celda=? WHERE Id_celda = " + idEditado + ";";
                
                PreparedStatement stat = con.prepareStatement(sql);
                
                stat.setString(1, numeroCelda);
                stat.setString(2, ubicacionCelda);

                stat.executeUpdate();

                System.out.println( sql );
                
                Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
                objFrame.changeToConsultCells();
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(IngresarCeldas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(IngresarCeldas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btEditarCeldaActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        // TODO add your handling code here:
        int input = JOptionPane.showConfirmDialog(null, "¿Desea eliminar la celda?", "Confirmar eliminación de celda", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if ( input == 0 ) {
        
            try {
                // TODO add your handling code here:
                
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
                Statement stat = con.createStatement();

                Statement statConsulta = con.createStatement();
                String sqlConsulta = "SELECT * FROM [dbo].[Celdas] WHERE Id_celda="+idEditado+";";
                ResultSet rs = statConsulta.executeQuery(sqlConsulta);
                rs.next();
                
                String estado = rs.getString("Disposicion_celda");
                int idParqueadero = rs.getInt("Id_parqueadero");
                
                String editarConteo = "";
                
                if ( estado.equals("Disponible") ) editarConteo = "Total_celdas_disponibles=Total_celdas_disponibles-1"; 
                if ( estado.equals("Ocupada") ) editarConteo = "Total_celdas_ocupadas=Total_celdas_ocupadas-1"; 
                
                String sql = "DELETE FROM [dbo].[Celdas] WHERE Id_celda = " + idEditado + ";";
                stat.executeUpdate(sql);
                stat.close();

                String sqlParqueadero = "UPDATE [dbo].[Parqueadero] SET Celdas_totales=Celdas_totales-1, "+editarConteo+" WHERE Id_parqueadero = " + idParqueadero + ";";

                PreparedStatement statParqueadero = con.prepareStatement(sqlParqueadero);

                statParqueadero.executeUpdate();

                stat.close();
                statParqueadero.close();
                statConsulta.close();
                
                Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
                objFrame.changeToConsultCells();
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PanelEditarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PanelEditarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        Principal_Admin objFrame = (Principal_Admin) SwingUtilities.getAncestorOfClass(Principal_Admin.class, this);
        objFrame.changeToConsultCells();
    }//GEN-LAST:event_btCancelarActionPerformed

    public void setId( int id ) {
        idEditado = id;
    }
    
    @Override
    public void setVisible( boolean value ) {
        super.setVisible(value);
        
        cbParqueadero.removeAllItems();
        
        if (value) {
            try {
            // TODO add your handling code here:
            
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
                Statement stat = con.createStatement();

                String sql = "SELECT " +
                        "C.Id_celda as 'Id_celda', " +
                        "P.Nombre_parqueadero as 'Nombre_parqueadero', " +
                        "C.Numero_celda as 'Numero_celda', " +
                        "C.Ubicacion_celda as 'Ubicacion_celda', " +
                        "C.Disposicion_celda as 'Disposicion_celda' " +
                        "FROM [dbo].[Celdas] C JOIN [dbo].[Parqueadero] P ON P.Id_parqueadero = C.Id_parqueadero WHERE Id_Celda = " + idEditado + ";";
                
                ResultSet rs = stat.executeQuery(sql);
                
                System.out.println(sql);

                if (rs.next()) {
                    
                    cbParqueadero.addItem(rs.getString("Nombre_parqueadero"));
                    cbParqueadero.setSelectedItem(rs.getString("Nombre_parqueadero"));
                    txtNumCelda.setText(rs.getString("Numero_celda"));
                    txtUbicacion.setText(rs.getString("Ubicacion_celda"));

                } else {
                    JOptionPane.showMessageDialog(null, "No existe la celda a editar", "Búsqueda vacia", JOptionPane.INFORMATION_MESSAGE);
                }
                
                stat.close();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PanelEditarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PanelEditarParqueaderos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            txtNumCelda.setText("");
            txtUbicacion.setText("");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btCancelar;
    private java.awt.Button btEditarCelda;
    private java.awt.Button btEliminar;
    private javax.swing.JComboBox<String> cbParqueadero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private java.awt.TextField txtNumCelda;
    private java.awt.TextField txtUbicacion;
    // End of variables declaration//GEN-END:variables
}
