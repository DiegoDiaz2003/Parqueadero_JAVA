/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectoparqueadero;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SIMON
 */
public class Op_PanelConsultarCeldas extends javax.swing.JPanel {

    
    private int idParqueadero = 0;
    private ArrayList<Integer> ids = new ArrayList<>();
    
    /**
     * Creates new form PanelConsultarCeldas
     */
    public Op_PanelConsultarCeldas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btConsultarCelda = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCeldas = new javax.swing.JTable();
        txtCeldasOcup = new java.awt.TextField();
        txtCeldasTotales = new java.awt.TextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCeldasDisp = new java.awt.TextField();
        jLabel4 = new javax.swing.JLabel();
        rbCeldaOcupada = new javax.swing.JRadioButton();
        rbCeldaDisponible = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtNumCelda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(246, 246, 246));

        btConsultarCelda.setBackground(new java.awt.Color(51, 102, 255));
        btConsultarCelda.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btConsultarCelda.setForeground(new java.awt.Color(255, 255, 255));
        btConsultarCelda.setLabel("Consultar");
        btConsultarCelda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarCeldaActionPerformed(evt);
            }
        });

        tblCeldas.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblCeldas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número", "Ubicacion", "Disposicion", "Parqueadero"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCeldas);

        txtCeldasOcup.setEditable(false);
        txtCeldasOcup.setEnabled(false);
        txtCeldasOcup.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtCeldasTotales.setEditable(false);
        txtCeldasTotales.setEnabled(false);
        txtCeldasTotales.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 116, 155));
        jLabel2.setText("Celdas Disponibles:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 116, 155));
        jLabel3.setText("Celdas Ocupadas:");

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 116, 155));
        jLabel1.setText("Total de Celdas: ");

        txtCeldasDisp.setEditable(false);
        txtCeldasDisp.setEnabled(false);
        txtCeldasDisp.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(18, 24, 80));
        jLabel4.setText("Modulo de Consulta de Celdas");

        rbCeldaOcupada.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        rbCeldaOcupada.setForeground(new java.awt.Color(63, 63, 63));
        rbCeldaOcupada.setText("Ocupada");
        rbCeldaOcupada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCeldaOcupadaActionPerformed(evt);
            }
        });

        rbCeldaDisponible.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        rbCeldaDisponible.setForeground(new java.awt.Color(63, 63, 63));
        rbCeldaDisponible.setText("Disponible");
        rbCeldaDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCeldaDisponibleActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(41, 116, 155));
        jLabel6.setText("Disposición");

        txtNumCelda.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 116, 155));
        jLabel5.setText("Número");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCeldasOcup, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCeldasDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1)
                                .addGap(22, 22, 22)
                                .addComponent(txtCeldasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(txtNumCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(rbCeldaOcupada)
                                            .addGap(9, 9, 9)
                                            .addComponent(rbCeldaDisponible))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(61, 61, 61)
                                            .addComponent(jLabel6)))
                                    .addGap(118, 118, 118)
                                    .addComponent(btConsultarCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(179, 179, 179))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btConsultarCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumCelda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbCeldaOcupada)
                            .addComponent(rbCeldaDisponible))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtCeldasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCeldasDisp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCeldasOcup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbCeldaDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCeldaDisponibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbCeldaDisponibleActionPerformed

    private void rbCeldaOcupadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCeldaOcupadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbCeldaOcupadaActionPerformed

    private void btConsultarCeldaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarCeldaActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblCeldas.getModel();
        modelo.setRowCount(0);
        
        String estado ="";
        
        if (rbCeldaOcupada.isSelected()){
            estado = "Ocupada";
            
            if (rbCeldaDisponible.isSelected()){
                estado = "";
            }
        } else if (rbCeldaDisponible.isSelected()){
            estado = "Disponible";
        }
        
        String numCelda = txtNumCelda.getText();
         
        System.out.println("par = "+idParqueadero+" estado = "+estado+" numCelda = "+numCelda);
         
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
            
            Statement stat = con.createStatement();
            
            String consulta = "";
            
            if(estado.equals("")){
                consulta = "SELECT " +
                        "P.Nombre_parqueadero as 'Nombre_parqueadero', " +
                        "C.Numero_celda as 'Numero_celda', " +
                        "C.Ubicacion_celda as 'Ubicacion_celda', " +
                        "C.Disposicion_celda as 'Disposicion_celda' " +
                        "FROM [dbo].[Celdas] C JOIN [dbo].[Parqueadero] P ON P.Id_parqueadero = C.Id_parqueadero WHERE Numero_celda LIKE'%" + numCelda + "%' AND P.Id_parqueadero = " +idParqueadero + ";";
                
            }else{
                consulta = "SELECT " +
                        "P.Nombre_parqueadero as 'Nombre_parqueadero', " +
                        "C.Numero_celda as 'Numero_celda', " +
                        "C.Ubicacion_celda as 'Ubicacion_celda', " +
                        "C.Disposicion_celda as 'Disposicion_celda' " +
                        "FROM [dbo].[Celdas] C JOIN [dbo].[Parqueadero] P ON P.Id_parqueadero = C.Id_parqueadero WHERE Numero_celda LIKE'%" + numCelda + "%' AND Disposicion_celda = '" + estado + "' AND P.Id_parqueadero = " +idParqueadero + ";";
            }
            
            System.out.println(consulta);
            ResultSet rs = stat.executeQuery(consulta);
            
            if (rs.next()) {
                do {
                    String nomParqueadero = rs.getString("Nombre_parqueadero");
                    String numero = rs.getString("Numero_celda");
                    String ubicacion = rs.getString("Ubicacion_celda");
                    String disposicion = rs.getString("Disposicion_celda");

                    String[] fila = {(numero),(ubicacion),(disposicion),(nomParqueadero)};
                    modelo.addRow(fila);
         
                } while (rs.next());
            }else {
                JOptionPane.showMessageDialog(null, "No existen resultados para la busqueda", "Búsqueda vacia", JOptionPane.INFORMATION_MESSAGE);
            }
            
            stat.close();
        } catch (SQLException ex) {
            Logger.getLogger(Ad_PanelConsultarCeldas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Ad_PanelConsultarCeldas.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_btConsultarCeldaActionPerformed

    @Override
    public void setVisible( boolean value ) {
        super.setVisible(value);
        
        DefaultTableModel modelo = (DefaultTableModel) tblCeldas.getModel();
        modelo.setRowCount(0);
                
        if ( value ) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                
                Connection con = DriverManager.getConnection("jdbc:sqlserver://systemengine-database.database.windows.net:1433;database=SystemEngine-database;user=systemengine-server@systemengine-database;password={63Z6OOi*};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;","systemengine-server","63Z6OOi*");
                Statement stat2 = con.createStatement();

                String consulta = "SELECT " +
                        "P.Nombre_parqueadero as 'Nombre_parqueadero', " +
                        "P.Total_celdas_disponibles as 'Total_celdas_disponibles', " +
                        "P.Total_celdas_ocupadas as 'Total_celdas_ocupadas', " +
                        "P.Celdas_totales as 'Celdas_totales', " +
                        "C.Numero_celda as 'Numero_celda', " +
                        "C.Ubicacion_celda as 'Ubicacion_celda', " +
                        "C.Disposicion_celda as 'Disposicion_celda' " +
                        "FROM [dbo].[Celdas] C JOIN [dbo].[Parqueadero] P ON P.Id_parqueadero = C.Id_parqueadero WHERE P.Id_parqueadero = " +idParqueadero + ";";
                
                System.out.println(consulta);
                ResultSet rs2 = stat2.executeQuery(consulta);

                if (rs2.next()) {
                    txtCeldasDisp.setText( rs2.getString( "Total_celdas_disponibles" ) );
                    txtCeldasOcup.setText( rs2.getString( "Total_celdas_ocupadas" ) );
                    txtCeldasTotales.setText( rs2.getString( "Celdas_totales" ) );
                    
                    do {
                        String nomParqueadero = rs2.getString("Nombre_parqueadero");
                        String numero = rs2.getString("Numero_celda");
                        String ubicacion = rs2.getString("Ubicacion_celda");
                        String disposicion = rs2.getString("Disposicion_celda");

                        String[] fila = {(numero),(ubicacion),(disposicion),(nomParqueadero)};
                        
                        System.out.println(Arrays.toString(fila));
                        
                        modelo.addRow(fila);

                    } while (rs2.next());
                }else {
                    JOptionPane.showMessageDialog(null, "No existen resultados para la busqueda", "Búsqueda vacia", JOptionPane.INFORMATION_MESSAGE);
                }
                
                stat2.close();
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PanelRegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PanelRegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            txtNumCelda.setText("");
        }
        
    }

    public void setIdParqueadero( int id ) {
        idParqueadero = id;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btConsultarCelda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCeldaDisponible;
    private javax.swing.JRadioButton rbCeldaOcupada;
    private javax.swing.JTable tblCeldas;
    private java.awt.TextField txtCeldasDisp;
    private java.awt.TextField txtCeldasOcup;
    private java.awt.TextField txtCeldasTotales;
    private javax.swing.JTextField txtNumCelda;
    // End of variables declaration//GEN-END:variables
}
